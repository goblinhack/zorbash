import my
import tp


def on_you_are_hit_but_still_alive(me, hitter, real_hitter, x, y, crit, damage):
    if not my.thing_sound_play_channel(me, my.CHANNEL_MONST, "squelch"):
        my.thing_sound_play_channel(me, my.CHANNEL_MONST_DEATH, "squelch")


def on_death(me, x, y):
    my.level_spawn_next_to(me, "jelly_baby")
    my.level_spawn_next_to(me, "jelly_baby")
    my.level_spawn_next_to(me, "jelly_baby")
    my.level_spawn_next_to(me, "jelly_baby")
    my.thing_sound_play_channel(me, my.CHANNEL_MONST, f"slime{my.non_pcg_randint(1, 9)}")


def tp_init(name, text_name):
    mytp = tp.Tp(name, text_name)
    my.tp_set_aggression_level_pct(mytp, 100)
    my.tp_set_ai_resent_count(mytp, 10)
    my.tp_set_ai_wanderer(mytp, True)
    my.tp_set_attack_eater(mytp, True)
    my.tp_set_attack_lunge(mytp, True)
    my.tp_set_collision_check(mytp, True)
    my.tp_set_collision_hit_priority(mytp, 10)
    my.tp_set_damage_natural_attack_type(mytp, "bite")
    my.tp_set_damage_natural_dice(mytp, "1d5")
    my.tp_set_damage_received_doubled_from_cold(mytp, True)
    my.tp_set_damage_received_doubled_from_fire(mytp, True)
    my.tp_set_distance_avoid(mytp, 3)
    my.tp_set_distance_jump(mytp, 2)
    my.tp_set_distance_vision(mytp, 7)
    my.tp_set_environ_avoids_fire(mytp, 100)
    my.tp_set_gfx_animated_can_hflip(mytp, True)
    my.tp_set_gfx_animated(mytp, True)
    my.tp_set_gfx_anim_use(mytp, "green_splatter")
    my.tp_set_gfx_bounce_on_move(mytp, True)
    my.tp_set_gfx_health_bar_shown(mytp, True)
    my.tp_set_gfx_oversized_and_on_floor(mytp, True)
    my.tp_set_gfx_short_shadow_caster(mytp, True)
    my.tp_set_gfx_show_outlined(mytp, True)
    my.tp_set_health_initial_dice(mytp, "10")
    my.tp_set_hunger_clock_tick_frequency(mytp, 50)
    my.tp_set_hunger_health_pct(mytp, 95)
    my.tp_set_hunger_is_insatiable(mytp, True)
    my.tp_set_is_able_to_fall(mytp, True)
    my.tp_set_is_able_to_jump_attack_chance_d1000(mytp, 200)
    my.tp_set_is_able_to_jump_attack(mytp, True)
    my.tp_set_is_able_to_jump_escape(mytp, True)
    my.tp_set_is_able_to_jump_on_low_hp_chance_d1000(mytp, 500)
    my.tp_set_is_able_to_jump_randomly_chance_d1000(mytp, 2)
    my.tp_set_is_able_to_jump(mytp, True)
    my.tp_set_is_able_to_see_in_the_dark(mytp, True)
    my.tp_set_is_acid(mytp, True)
    my.tp_set_is_attackable_by_monst(mytp, True)
    my.tp_set_is_attackable_by_player(mytp, True)
    my.tp_set_is_biome_dungeon(mytp, True)
    my.tp_set_is_biome_swamp(mytp, True)
    my.tp_set_is_bleeder(mytp, True)
    my.tp_set_is_burnable(mytp, True)
    my.tp_set_is_crushable(mytp, True)
    my.tp_set_is_described_when_hovering_over(mytp, True)
    my.tp_set_is_fearless(mytp, 500)
    my.tp_set_is_hittable(mytp, True)
    my.tp_set_is_immune_to_acid(mytp, True)
    my.tp_set_is_immune_to_necrosis(mytp, True)
    my.tp_set_is_jelly_baby_eater(mytp, True)
    my.tp_set_is_jelly_eater(mytp, True)
    my.tp_set_is_jelly_parent(mytp, True)
    my.tp_set_is_jelly(mytp, True)
    my.tp_set_is_living(mytp, True)
    my.tp_set_is_loggable(mytp, True)
    my.tp_set_is_meat_eater(mytp, True)
    my.tp_set_is_monst_class_a(mytp, True)
    my.tp_set_is_monst(mytp, True)
    my.tp_set_is_moveable(mytp, True)
    my.tp_set_is_pink_blood_eater(mytp, True)
    my.tp_set_is_pink_blooded(mytp, True)
    my.tp_set_is_red_blood_eater(mytp, True)
    my.tp_set_is_tickable(mytp, True)
    my.tp_set_is_toughness_soft(mytp, True)
    my.tp_set_long_text_description(mytp, "Jelly jumpers are numerous, bouncy and carnivorous. They will eat almost anything, including their own. They have the annoying habit of jumping when threatened and dividing when defeated . This is an adult. It will eat its own children!")
    my.tp_set_monst_size(mytp, my.MONST_SIZE_LARGE)
    my.tp_set_noise_decibels_hearing(mytp, 50)
    my.tp_set_normal_placement_rules(mytp, True)
    my.tp_set_nutrition_dice(mytp, "1d4")
    my.tp_set_on_death_do(mytp, "me.on_death()")
    my.tp_set_on_you_are_hit_but_still_alive_do(mytp, "me.on_you_are_hit_but_still_alive()")
    my.tp_set_rarity(mytp, my.RARITY_COMMON)
    my.tp_set_stat_con(mytp, 14)
    my.tp_set_stat_def(mytp, 8)
    my.tp_set_stat_dex(mytp, 10)
    my.tp_set_stat_luck(mytp, 10)
    my.tp_set_stat_str(mytp, 15)
    my.tp_set_text_a_or_an(mytp, "a")
    my.tp_set_text_description(mytp, "A gargantuan pile of sentient jelly.")
    my.tp_set_text_hits(mytp, "splats")
    my.tp_set_z_depth(mytp, my.MAP_DEPTH_OBJ)
    my.tp_set_z_prio(mytp, my.MAP_PRIO_NORMAL)

    delay = 200
    my.tp_set_tile(mytp, tile=name + ".1.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".2.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".3.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".4.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".5.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".6.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".7.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".8.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".1.75", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".2.75", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".3.75", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".4.75", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".5.75", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".6.75", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".7.75", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".8.75", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".1.50", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".2.50", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".3.50", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".4.50", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".5.50", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".6.50", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".7.50", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".8.50", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".1.25", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".2.25", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".3.25", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".4.25", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".5.25", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".6.25", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".7.25", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(mytp, tile=name + ".8.25", is_hp_25_percent=True, delay_ms=delay)

    my.tp_update(mytp, )


def init():
    tp_init(name="jelly_parent", text_name="jelly jumper")


init()

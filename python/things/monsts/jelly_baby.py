import my
import tp


def on_you_are_hit_but_still_alive(me, hitter, real_hitter, x, y, crit, damage):
    if not my.thing_sound_play_channel(me, my.CHANNEL_MONST, "squelch"):
        my.thing_sound_play_channel(me, my.CHANNEL_MONST_DEATH, "squelch")


def on_death(me, x, y):
    if my.pcg_randint(1, 100) < 40:
        my.level_spawn_next_to(me, "jelly_baby")
    if my.pcg_randint(1, 100) < 40:
        my.level_spawn_next_to(me, "jelly_baby")
    my.thing_sound_play_channel(me, my.CHANNEL_MONST, f"slime{my.non_pcg_randint(1, 9)}")


def tp_init(name, text_name):
    self = tp.Tp(name, text_name)
    my.tp_set_aggression_level_pct(self, 100)
    my.tp_set_ai_resent_count(self, 3)
    my.tp_set_ai_wanderer(self, True)
    my.tp_set_attack_eater(self, True)
    my.tp_set_attack_lunge(self, True)
    my.tp_set_collision_check(self, True)
    my.tp_set_collision_hit_priority(self, 10)
    my.tp_set_damage_natural_attack_type(self, "bite")
    my.tp_set_damage_natural_dice(self, "1")
    my.tp_set_damage_received_doubled_from_cold(self, True)
    my.tp_set_damage_received_doubled_from_fire(self, True)
    my.tp_set_distance_avoid(self, 2)
    my.tp_set_distance_jump(self, 2)
    my.tp_set_distance_vision(self, 5)
    my.tp_set_environ_avoids_fire(self, 100)
    my.tp_set_gfx_animated_can_hflip(self, True)
    my.tp_set_gfx_animated(self, True)
    my.tp_set_gfx_anim_use(self, "green_splatter")
    my.tp_set_gfx_bounce_on_move(self, True)
    my.tp_set_gfx_health_bar_shown(self, True)
    my.tp_set_gfx_short_shadow_caster(self, True)
    my.tp_set_gfx_show_outlined(self, True)
    my.tp_set_health_initial_dice(self, "1")
    my.tp_set_hunger_clock_tick_frequency(self, 50)
    my.tp_set_hunger_health_pct(self, 95)
    my.tp_set_hunger_is_insatiable(self, True)
    my.tp_set_is_able_to_fall(self, True)
    my.tp_set_is_able_to_jump_attack_chance_d1000(self, 20)
    my.tp_set_is_able_to_jump_attack(self, True)
    my.tp_set_is_able_to_jump_escape(self, True)
    my.tp_set_is_able_to_jump_on_low_hp_chance_d1000(self, 500)
    my.tp_set_is_able_to_jump_randomly_chance_d1000(self, 20)
    my.tp_set_is_able_to_jump(self, True)
    my.tp_set_is_able_to_see_in_the_dark(self, True)
    my.tp_set_is_attackable_by_monst(self, True)
    my.tp_set_is_attackable_by_player(self, True)
    my.tp_set_is_biome_dungeon(self, True)
    my.tp_set_is_biome_swamp(self, True)
    my.tp_set_is_bleeder(self, True)
    my.tp_set_is_burnable(self, True)
    my.tp_set_is_crushable(self, True)
    my.tp_set_is_described_when_hovering_over(self, True)
    my.tp_set_is_fearless(self, 500)
    my.tp_set_is_hittable(self, True)
    my.tp_set_is_immune_to_acid(self, True)
    my.tp_set_is_immune_to_necrosis(self, True)
    my.tp_set_is_jelly_baby_eater(self, True)
    my.tp_set_is_jelly_baby(self, True)
    my.tp_set_is_jelly_eater(self, True)
    my.tp_set_is_jelly(self, True)
    my.tp_set_is_living(self, True)
    my.tp_set_is_loggable(self, True)
    my.tp_set_is_meat_eater(self, True)
    my.tp_set_is_monst_class_a(self, True)
    my.tp_set_is_monst(self, True)
    my.tp_set_is_moveable(self, True)
    my.tp_set_is_pink_blood_eater(self, True)
    my.tp_set_is_pink_blooded(self, True)
    my.tp_set_is_red_blood_eater(self, True)
    my.tp_set_is_tickable(self, True)
    my.tp_set_is_toughness_soft(self, True)
    my.tp_set_long_text_description(self, "Jelly jumpers are numerous, bouncy and lots of fun! They will eat almost anything, including their own. They have the annoying habit of jumping when threatened. This one is a baby jelly. It tends to avoid adults of its kind. So should you.")
    my.tp_set_monst_size(self, my.MONST_SIZE_TINY)
    my.tp_set_noise_decibels_hearing(self, 50)
    my.tp_set_normal_placement_rules(self, True)
    my.tp_set_nutrition_dice(self, "1d4")
    my.tp_set_on_death_do(self, "me.on_death()")
    my.tp_set_on_you_are_hit_but_still_alive_do(self, "me.on_you_are_hit_but_still_alive()")
    my.tp_set_rarity(self, my.RARITY_COMMON)
    my.tp_set_stat_con(self, 10)
    my.tp_set_stat_def(self, 5)
    my.tp_set_stat_dex(self, 10)
    my.tp_set_stat_luck(self, 10)
    my.tp_set_stat_str(self, 5)
    my.tp_set_text_a_or_an(self, "a")
    my.tp_set_text_description(self, "A small pile of semi sentient jelly.")
    my.tp_set_text_hits(self, "splats")
    my.tp_set_z_depth(self, my.MAP_DEPTH_OBJ)
    my.tp_set_z_prio(self, my.MAP_PRIO_NORMAL)

    delay = 200
    my.tp_set_tile(self, tile=name + ".1.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".2.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".3.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".4.100", is_hp_100_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".1.100", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".2.100", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".3.100", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".4.100", is_hp_75_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".1.100", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".2.100", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".3.100", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".4.100", is_hp_50_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".1.100", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".2.100", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".3.100", is_hp_25_percent=True, delay_ms=delay)
    my.tp_set_tile(self, tile=name + ".4.100", is_hp_25_percent=True, delay_ms=delay)

    my.tp_update(self)


def init():
    tp_init(name="jelly_baby", text_name="baby jelly jumper")


init()
